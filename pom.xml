<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.10</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ro.linic.cloud</groupId>
	<artifactId>legacy-cloud-acl</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<name>legacy-cloud-acl</name>
	<description>Anti-corruption layer between Linic Platform and Linic Cloud to perform data transformations.</description>
	<properties>
		<java.version>17</java.version>
		<testcontainers.version>1.18.3</testcontainers.version>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<org.projectlombok.version>1.18.30</org.projectlombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
	</properties>
	<dependencies>
		<dependency>
	        <groupId>org.projectlombok</groupId>
	        <artifactId>lombok</artifactId>
			<optional>true</optional>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-data-rest</artifactId>
	    </dependency>
		<dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-artemis</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jms-starter</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.apache.camel.springboot</groupId>
		    <artifactId>camel-bean-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.camel.springboot</groupId>
		    <artifactId>camel-gson-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.camel.springboot</groupId>
		    <artifactId>camel-mapstruct-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.camel.springboot</groupId>
		    <artifactId>camel-http-starter</artifactId>
		</dependency>
		<dependency>
		  <groupId>com.google.guava</groupId>
		  <artifactId>guava</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.sentry</groupId>
		    <artifactId>sentry-spring-boot-starter-jakarta</artifactId>
		    <version>8.5.0</version>
		</dependency>
		<dependency>
		    <groupId>io.sentry</groupId>
		    <artifactId>sentry-logback</artifactId>
		    <version>8.5.0</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.camel</groupId>
		    <artifactId>camel-test-spring-junit5</artifactId>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<!-- Camel BOM -->
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>4.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>17</source>
					<target>17</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.projectlombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-antrun-plugin</artifactId>
	            <executions>
	                <execution>
	                    <id>scp-to-remote</id>
	                    <phase>install</phase>
	                    <goals>
	                        <goal>run</goal>
	                    </goals>
	                    <configuration>
	                        <target>
	                            <scp localFile="${project.build.directory}/${project.build.finalName}.jar"
	                                 remoteToFile="${rserver.user}@colibriserver.go.ro:/mnt/D/repo/legacy-cloud-acl/legacy-cloud-acl.jar"
	                                 password="${rserver.pass}" trust="true">
	                            </scp>
	                            <scp localFile="${project.basedir}/legacy-cloud-acl.exe"
	                                 remoteToFile="${rserver.user}@colibriserver.go.ro:/mnt/D/repo/legacy-cloud-acl"
	                                 password="${rserver.pass}" trust="true">
	                            </scp>
	                            <scp localFile="${project.basedir}/legacy-cloud-acl.xml"
	                                 remoteToFile="${rserver.user}@colibriserver.go.ro:/mnt/D/repo/legacy-cloud-acl"
	                                 password="${rserver.pass}" trust="true">
	                            </scp>
	                        </target>
	                    </configuration>
	                </execution>
	            </executions>
	            <dependencies>
			        <dependency>
			          <groupId>com.jcraft</groupId>
			          <artifactId>jsch</artifactId>
			          <version>0.1.55</version>
			        </dependency>
			        <dependency>
			          <groupId>org.apache.ant</groupId>
			          <artifactId>ant-jsch</artifactId>
			          <version>1.10.14</version>
			        </dependency>
			    </dependencies>
	        </plugin>
		</plugins>
	</build>
</project>
